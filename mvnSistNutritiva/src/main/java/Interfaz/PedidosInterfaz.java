/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interfaz;

import Entidad.*;
import Logica.ClienteLogica;
import Logica.PedidoLogica;
import Logica.ViandasLogica;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import java.awt.Color;
import java.sql.Date;
import java.time.DayOfWeek;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.List;
import java.util.regex.PatternSyntaxException;

/**
 * @company FK-SOFT
 * @author facul
 */
public class PedidosInterfaz extends javax.swing.JFrame {
    private static int idPedidoVigente;
    private static int idClienteVigente;
    private static int idViandaVigente;
    /**
     * Constructor: - Creates new form GestionClientes
     */
    public PedidosInterfaz() {
        initComponents();
        setUp();
        setVisible(true);
    }

    private void setUp() {
        getContentPane().setBackground(new Color(49, 28, 28));
        setLocationRelativeTo(null);
        setTitle("Gestion de pedidos");
        setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        limpiarCampos();
        llenarTablaClientes();
        llenarTablaViandas();
        llenarTablasPedidos();
    }

        /**
         * This method is called from within the constructor to initialize the form.
         * WARNING: Do NOT modify this code. The content of this method is always
         * regenerated by the Form Editor.
         */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jl_titulo = new javax.swing.JLabel();
        jl_fecha = new javax.swing.JLabel();
        jl_tipo = new javax.swing.JLabel();
        jl_cliente = new javax.swing.JLabel();
        jl_vianda = new javax.swing.JLabel();
        jdate_fecha = new com.toedter.calendar.JDateChooser();
        rb_almuerzo = new javax.swing.JRadioButton();
        rb_cena = new javax.swing.JRadioButton();
        rb_carne = new javax.swing.JRadioButton();
        rb_pescado = new javax.swing.JRadioButton();
        jt_cliente = new javax.swing.JTextField();
        jt_vianda = new javax.swing.JTextField();
        btn_actualizar = new javax.swing.JButton();
        btn_agregar = new javax.swing.JButton();
        btn_eliminar = new javax.swing.JButton();
        jTabbedPane_general = new javax.swing.JTabbedPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtable_cliente = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtable_viandas = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        jtable_lunes = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        jtable_martes = new javax.swing.JTable();
        jScrollPane5 = new javax.swing.JScrollPane();
        jtable_miercoles = new javax.swing.JTable();
        jScrollPane6 = new javax.swing.JScrollPane();
        jtable_jueves = new javax.swing.JTable();
        jScrollPane7 = new javax.swing.JScrollPane();
        jtable_viernes = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(49, 28, 28));
        setResizable(false);

        jl_titulo.setBackground(new java.awt.Color(49, 28, 28));
        jl_titulo.setFont(new java.awt.Font("Calibri", 0, 36)); // NOI18N
        jl_titulo.setForeground(new java.awt.Color(255, 253, 118));
        jl_titulo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jl_titulo.setText("PEDIDOS");
        jl_titulo.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);

        jl_fecha.setBackground(new java.awt.Color(49, 28, 28));
        jl_fecha.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jl_fecha.setForeground(new java.awt.Color(255, 253, 118));
        jl_fecha.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jl_fecha.setText("FECHA");
        jl_fecha.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);

        jl_tipo.setBackground(new java.awt.Color(49, 28, 28));
        jl_tipo.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jl_tipo.setForeground(new java.awt.Color(255, 253, 118));
        jl_tipo.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jl_tipo.setText("TIPO");
        jl_tipo.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);

        jl_cliente.setBackground(new java.awt.Color(49, 28, 28));
        jl_cliente.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jl_cliente.setForeground(new java.awt.Color(255, 253, 118));
        jl_cliente.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jl_cliente.setText("CLIENTE");
        jl_cliente.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);

        jl_vianda.setBackground(new java.awt.Color(49, 28, 28));
        jl_vianda.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jl_vianda.setForeground(new java.awt.Color(255, 253, 118));
        jl_vianda.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jl_vianda.setText("VIANDA");
        jl_vianda.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);

        rb_almuerzo.setText("ALMUERZO");
        rb_almuerzo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rb_almuerzoActionPerformed(evt);
            }
        });

        rb_cena.setText("CENA");
        rb_cena.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rb_cenaActionPerformed(evt);
            }
        });

        rb_carne.setText("CARNE");
        rb_carne.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rb_carneActionPerformed(evt);
            }
        });

        rb_pescado.setText("PESCADO");
        rb_pescado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rb_pescadoActionPerformed(evt);
            }
        });

        jt_cliente.setBackground(new java.awt.Color(243, 243, 194));
        jt_cliente.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jt_cliente.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jt_cliente.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.black, java.awt.Color.black, java.awt.Color.black, java.awt.Color.black));
        jt_cliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                buscadorClientes(evt);
            }
        });

        jt_vianda.setBackground(new java.awt.Color(243, 243, 194));
        jt_vianda.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jt_vianda.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jt_vianda.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.black, java.awt.Color.black, java.awt.Color.black, java.awt.Color.black));
        jt_vianda.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                buscadorViandas(evt);
            }
        });

        btn_actualizar.setBackground(new java.awt.Color(255, 253, 118));
        btn_actualizar.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        btn_actualizar.setText("Actualizar");
        btn_actualizar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.black, java.awt.Color.black, java.awt.Color.black, java.awt.Color.black));
        btn_actualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_actualizarActionPerformed(evt);
            }
        });

        btn_agregar.setBackground(new java.awt.Color(255, 253, 118));
        btn_agregar.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        btn_agregar.setText("Agregar");
        btn_agregar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.black, java.awt.Color.black, java.awt.Color.black, java.awt.Color.black));
        btn_agregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_agregarActionPerformed(evt);
            }
        });

        btn_eliminar.setBackground(new java.awt.Color(255, 253, 118));
        btn_eliminar.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        btn_eliminar.setText("Eliminar");
        btn_eliminar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.black, java.awt.Color.black, java.awt.Color.black, java.awt.Color.black));
        btn_eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_eliminarActionPerformed(evt);
            }
        });

        jtable_cliente.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jtable_cliente.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtable_clienteMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jtable_cliente);

        jTabbedPane_general.addTab("Cliente", jScrollPane1);

        jtable_viandas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jtable_viandas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtable_viandasMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jtable_viandas);

        jTabbedPane_general.addTab("Vianda", jScrollPane2);

        jtable_lunes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jtable_lunes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtable_lunesMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jtable_lunes);

        jTabbedPane_general.addTab("Lunes", jScrollPane3);

        jtable_martes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jtable_martes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtable_martesMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(jtable_martes);

        jTabbedPane_general.addTab("Martes", jScrollPane4);

        jtable_miercoles.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jtable_miercoles.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtable_miercolesMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(jtable_miercoles);

        jTabbedPane_general.addTab("Miercoles", jScrollPane5);

        jtable_jueves.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jtable_jueves.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtable_juevesMouseClicked(evt);
            }
        });
        jScrollPane6.setViewportView(jtable_jueves);

        jTabbedPane_general.addTab("Jueves", jScrollPane6);

        jtable_viernes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jtable_viernes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtable_viernesMouseClicked(evt);
            }
        });
        jScrollPane7.setViewportView(jtable_viernes);

        jTabbedPane_general.addTab("Viernes", jScrollPane7);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jl_titulo, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(1032, 1032, 1032))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(btn_agregar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btn_eliminar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btn_actualizar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 245, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jl_fecha, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jdate_fecha, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jl_vianda, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jl_cliente, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jt_cliente)
                                    .addComponent(jt_vianda, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jl_tipo, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(rb_almuerzo)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(rb_cena))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(rb_carne)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(rb_pescado)))
                        .addGap(18, 18, 18)
                        .addComponent(jTabbedPane_general, javax.swing.GroupLayout.PREFERRED_SIZE, 968, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(17, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jl_titulo, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jl_fecha, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jdate_fecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jt_cliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jl_cliente, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jt_vianda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jl_vianda, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rb_cena)
                            .addComponent(rb_almuerzo)
                            .addComponent(jl_tipo, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rb_pescado)
                            .addComponent(rb_carne))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btn_actualizar)
                        .addGap(18, 18, 18)
                        .addComponent(btn_agregar)
                        .addGap(18, 18, 18)
                        .addComponent(btn_eliminar))
                    .addComponent(jTabbedPane_general, javax.swing.GroupLayout.DEFAULT_SIZE, 512, Short.MAX_VALUE))
                .addGap(22, 22, 22))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_agregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_agregarActionPerformed
        if(addPedido())
            update();
    }//GEN-LAST:event_btn_agregarActionPerformed


    private void btn_eliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_eliminarActionPerformed
        if(deletePedido())
            update();
    }//GEN-LAST:event_btn_eliminarActionPerformed

    private void buscadorClientes(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_buscadorClientes
        addFilter(jtable_cliente, jt_cliente.getText(), 1);
    }//GEN-LAST:event_buscadorClientes

    private void buscadorViandas(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_buscadorViandas
        addFilter(jtable_viandas, jt_vianda.getText(), 1);
    }//GEN-LAST:event_buscadorViandas

    private void jtable_clienteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtable_clienteMouseClicked
        int filaSelec = jtable_cliente.rowAtPoint(evt.getPoint());
        jt_cliente.setText(jtable_cliente.getValueAt(filaSelec, 1).toString());
        idClienteVigente = (int) jtable_cliente.getValueAt(filaSelec, 0);
    }//GEN-LAST:event_jtable_clienteMouseClicked

    private void jtable_viandasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtable_viandasMouseClicked
        int filaSelec = jtable_viandas.rowAtPoint(evt.getPoint());
        jt_vianda.setText(jtable_viandas.getValueAt(filaSelec, 1).toString());
        idViandaVigente = (int) jtable_viandas.getValueAt(filaSelec, 0);
    }//GEN-LAST:event_jtable_viandasMouseClicked

    private void jtable_lunesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtable_lunesMouseClicked
        int filaSelec = jtable_lunes.rowAtPoint(evt.getPoint());
        jt_cliente.setText(jtable_lunes.getValueAt(filaSelec, 1).toString());
        jt_vianda.setText(jtable_viandas.getValueAt(filaSelec, 2).toString());
        idPedidoVigente = (int) jtable_lunes.getValueAt(filaSelec, 0);
    }//GEN-LAST:event_jtable_lunesMouseClicked

    private void jtable_martesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtable_martesMouseClicked
        int filaSelec = jtable_martes.rowAtPoint(evt.getPoint());
        jt_cliente.setText(jtable_martes.getValueAt(filaSelec, 1).toString());
        jt_vianda.setText(jtable_martes.getValueAt(filaSelec, 2).toString());
        idPedidoVigente = (int) jtable_martes.getValueAt(filaSelec, 0);
    }//GEN-LAST:event_jtable_martesMouseClicked

    private void jtable_miercolesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtable_miercolesMouseClicked
        int filaSelec = jtable_miercoles.rowAtPoint(evt.getPoint());
        jt_cliente.setText(jtable_miercoles.getValueAt(filaSelec, 1).toString());
        jt_vianda.setText(jtable_miercoles.getValueAt(filaSelec, 2).toString());
        idPedidoVigente = (int) jtable_miercoles.getValueAt(filaSelec, 0);
    }//GEN-LAST:event_jtable_miercolesMouseClicked

    private void jtable_juevesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtable_juevesMouseClicked
        int filaSelec = jtable_jueves.rowAtPoint(evt.getPoint());
        jt_cliente.setText(jtable_jueves.getValueAt(filaSelec, 1).toString());
        jt_vianda.setText(jtable_jueves.getValueAt(filaSelec, 2).toString());
        idPedidoVigente = (int) jtable_jueves.getValueAt(filaSelec, 0);
    }//GEN-LAST:event_jtable_juevesMouseClicked

    private void jtable_viernesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtable_viernesMouseClicked
        int filaSelec = jtable_viernes.rowAtPoint(evt.getPoint());
        jt_cliente.setText(jtable_viernes.getValueAt(filaSelec, 1).toString());
        jt_vianda.setText(jtable_viernes.getValueAt(filaSelec, 2).toString());
        idPedidoVigente = (int) jtable_viernes.getValueAt(filaSelec, 0);
    }//GEN-LAST:event_jtable_viernesMouseClicked

    private void btn_actualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_actualizarActionPerformed
        update();
    }//GEN-LAST:event_btn_actualizarActionPerformed

    private void rb_almuerzoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rb_almuerzoActionPerformed
        if(rb_almuerzo.isSelected())
            rb_cena.setSelected(false);
    }//GEN-LAST:event_rb_almuerzoActionPerformed

    private void rb_cenaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rb_cenaActionPerformed
        if (rb_cena.isSelected())
            rb_almuerzo.setSelected(false);
    }//GEN-LAST:event_rb_cenaActionPerformed

    private void rb_carneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rb_carneActionPerformed
        if(rb_carne.isSelected())
            rb_pescado.setSelected(false);
    }//GEN-LAST:event_rb_carneActionPerformed

    private void rb_pescadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rb_pescadoActionPerformed
        if(rb_pescado.isSelected())
            rb_carne.setSelected(false);
    }//GEN-LAST:event_rb_pescadoActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_actualizar;
    private javax.swing.JButton btn_agregar;
    private javax.swing.JButton btn_eliminar;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JTabbedPane jTabbedPane_general;
    private com.toedter.calendar.JDateChooser jdate_fecha;
    private javax.swing.JLabel jl_cliente;
    private javax.swing.JLabel jl_fecha;
    private javax.swing.JLabel jl_tipo;
    private javax.swing.JLabel jl_titulo;
    private javax.swing.JLabel jl_vianda;
    private javax.swing.JTextField jt_cliente;
    private javax.swing.JTextField jt_vianda;
    private javax.swing.JTable jtable_cliente;
    private javax.swing.JTable jtable_jueves;
    private javax.swing.JTable jtable_lunes;
    private javax.swing.JTable jtable_martes;
    private javax.swing.JTable jtable_miercoles;
    private javax.swing.JTable jtable_viandas;
    private javax.swing.JTable jtable_viernes;
    private javax.swing.JRadioButton rb_almuerzo;
    private javax.swing.JRadioButton rb_carne;
    private javax.swing.JRadioButton rb_cena;
    private javax.swing.JRadioButton rb_pescado;
    // End of variables declaration//GEN-END:variables


    private String makeTipo() {
        if(rb_almuerzo.isSelected() && rb_pescado.isSelected())
            return "ALMUERZOPESCADO";
        else if(rb_almuerzo.isSelected() && rb_carne.isSelected())
            return "ALMUERZOCARNE";
        else if(rb_cena.isSelected() && rb_pescado.isSelected())
            return "CENAPESCADO";
        else if(rb_cena.isSelected() && rb_carne.isSelected())
            return "CENACARNE";
        else if (rb_almuerzo.isSelected())
            return "ALMUERZO";
        else
            return "CENA";
    }

    private boolean addPedido(){
        ClienteEntidad cliente = null; ViandaEntidad vianda = null; Date fecha = null; String tipo = null;
        if(jdate_fecha.getDate().toString().isEmpty()) {
            JOptionPane.showMessageDialog(null, "El campo fecha es obligatorio");
            return false;
        }
        else if (idClienteVigente < 0) {
            JOptionPane.showMessageDialog(null, "El campo cliente es obligatorio");
            return false;
        }
        else if(idViandaVigente < 0) {
            JOptionPane.showMessageDialog(null, "El campo vianda es obligatorio");
            return false;
        }
        else if(!rb_almuerzo.isSelected() && !rb_cena.isSelected()) {
            JOptionPane.showMessageDialog(null, "Debe seleccionar si es almuerzo o cena");
            return false;
        }

        cliente = ClienteLogica.getCliente(idClienteVigente);
        vianda = ViandasLogica.getVianda(idViandaVigente);
        fecha = new java.sql.Date(jdate_fecha.getDate().getTime());
        tipo = makeTipo();

        PedidoEntidad pedido = new PedidoEntidad(cliente, vianda, fecha, tipo);
        if (PedidoLogica.addPedido(pedido)) {
            JOptionPane.showMessageDialog(null, "Pedido de " + cliente.getNombre() + " agregado con exito");
            return true;
        }
        else{
            JOptionPane.showMessageDialog(null, "Error: al intentar agregar el pediodo");
            return false;
        }
    }

    private boolean deletePedido() {
        if(idPedidoVigente < 0) { //Si no se selecciono un pedido
            JOptionPane.showMessageDialog(null, "Debe seleccionar un pedido para eliminar");
            return false;
        }

        PedidoEntidad pedido = PedidoLogica.getPedido(idPedidoVigente);

        if(PedidoLogica.delete(pedido)) {
            JOptionPane.showMessageDialog(null, "Pedido eliminado con exito");
            return true;
        }
        else {
            JOptionPane.showMessageDialog(null, "Error: al intentar eliminar el pedido");
            return false;
        }
    }

    private void update() {
        this.dispose();
        new PedidosInterfaz();
    }


    private void llenarTablasPedidos() {
        llenarTablaLunes();
        llenarTablaMartes();
        llenarTablaMiercoles();
        llenarTablaJueves();
        llenarTablaViernes();
    }

    private void llenarTablaViernes() {
        String[] columnas = new String[]{"ID", "Cliente", "Vianda", "Fecha", "Tipo"};
        Class[] tipos = {Integer.class, String.class, String.class, Date.class, String.class};

        ArrayList<PedidoEntidad> pedidosViernes = PedidoLogica.getPedidos(DayOfWeek.FRIDAY);
        Object[][] objetosArray = new Object[pedidosViernes.size()][columnas.length];

        for (int i = 0; i < pedidosViernes.size(); i++) {
            String tipo;
            if (pedidosViernes.get(i).getTipo().equals("almuerzo"))
                tipo = "almuerzo";
            else
                tipo = "cena";

            objetosArray[i] = new Object[]{
                    pedidosViernes.get(i).getId(),
                    pedidosViernes.get(i).getCliente().getNombre(),
                    pedidosViernes.get(i).getVianda().getNombre(),
                    pedidosViernes.get(i).getFecha(),
                    pedidosViernes.get(i).getTipo()
            };
        }

        jtable_viernes.setModel(new DefaultTableModel(objetosArray, columnas) {
            Class[] types = tipos;

            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }

            @Override
            public Class getColumnClass(int columnindex) {
                return this.types[columnindex];
            }
        });
    }

    private void llenarTablaJueves() {
        String[] columnas = new String[]{"ID", "Cliente", "Vianda", "Fecha", "Tipo"};
        Class[] tipos = {Integer.class, String.class, String.class, Date.class, String.class};

        ArrayList<PedidoEntidad> pedidosJueves = PedidoLogica.getPedidos(DayOfWeek.THURSDAY);
        Object[][] objetosArray = new Object[pedidosJueves.size()][columnas.length];

        for (int i = 0; i < pedidosJueves.size(); i++) {
            String tipo;
            if (pedidosJueves.get(i).getTipo().equals("almuerzo"))
                tipo = "almuerzo";
            else
                tipo = "cena";

            objetosArray[i] = new Object[]{
                    pedidosJueves.get(i).getId(),
                    pedidosJueves.get(i).getCliente().getNombre(),
                    pedidosJueves.get(i).getVianda().getNombre(),
                    pedidosJueves.get(i).getFecha(),
                    pedidosJueves.get(i).getTipo()
            };
        }

        jtable_jueves.setModel(new DefaultTableModel(objetosArray, columnas) {
            Class[] types = tipos;

            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }

            @Override
            public Class getColumnClass(int columnindex) {
                return this.types[columnindex];
            }
        });
    }

    private void llenarTablaMiercoles() {
        String[] columnas = new String[]{"ID", "Cliente", "Vianda", "Fecha", "Tipo"};
        Class[] tipos = {Integer.class, String.class, String.class, Date.class, String.class};

        ArrayList<PedidoEntidad> pedidosMiercoles = PedidoLogica.getPedidos(DayOfWeek.WEDNESDAY);
        Object[][] objetosArray = new Object[pedidosMiercoles.size()][columnas.length];

        for (int i = 0; i < pedidosMiercoles.size(); i++) {
            String tipo;
            if (pedidosMiercoles.get(i).getTipo().equals("almuerzo"))
                tipo = "almuerzo";
            else
                tipo = "cena";

            objetosArray[i] = new Object[]{
                    pedidosMiercoles.get(i).getId(),
                    pedidosMiercoles.get(i).getCliente().getNombre(),
                    pedidosMiercoles.get(i).getVianda().getNombre(),
                    pedidosMiercoles.get(i).getFecha(),
                    pedidosMiercoles.get(i).getTipo()
            };
        }

        jtable_lunes.setModel(new DefaultTableModel(objetosArray, columnas) {
            Class[] types = tipos;

            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }

            @Override
            public Class getColumnClass(int columnindex) {
                return this.types[columnindex];
            }
        });
    }

    private void llenarTablaMartes() {
        String[] columnas = new String[]{"ID", "Cliente", "Vianda", "Fecha", "Tipo"};
        Class[] tipos = {Integer.class, String.class, String.class, Date.class, String.class};

        ArrayList<PedidoEntidad> pedidosMartes = PedidoLogica.getPedidos(DayOfWeek.TUESDAY);
        Object[][] objetosArray = new Object[pedidosMartes.size()][columnas.length];

        for (int i = 0; i < pedidosMartes.size(); i++) {
            String tipo;
            if (pedidosMartes.get(i).getTipo().equals("almuerzo"))
                tipo = "almuerzo";
            else
                tipo = "cena";

            objetosArray[i] = new Object[]{
                    pedidosMartes.get(i).getId(),
                    pedidosMartes.get(i).getCliente().getNombre(),
                    pedidosMartes.get(i).getVianda().getNombre(),
                    pedidosMartes.get(i).getFecha(),
                    pedidosMartes.get(i).getTipo()
            };
        }

        jtable_lunes.setModel(new DefaultTableModel(objetosArray, columnas) {
            Class[] types = tipos;

            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }

            @Override
            public Class getColumnClass(int columnindex) {
                return this.types[columnindex];
            }
        });
    }

    private void llenarTablaLunes() {
        String[] columnas = new String[]{"ID", "Cliente", "Vianda", "Fecha", "Tipo"};
        Class[] tipos = {Integer.class, String.class, String.class, Date.class, String.class};

        ArrayList<PedidoEntidad> pedidosLunes = PedidoLogica.getPedidos(DayOfWeek.MONDAY);
        Object[][] objetosArray = new Object[pedidosLunes.size()][columnas.length];

        for (int i = 0; i < pedidosLunes.size(); i++) {
            String tipo;
            if (pedidosLunes.get(i).getTipo().equals("almuerzo"))
                tipo = "almuerzo";
            else
                tipo = "cena";

            objetosArray[i] = new Object[]{
                    pedidosLunes.get(i).getId(),
                    pedidosLunes.get(i).getCliente().getNombre(),
                    pedidosLunes.get(i).getVianda().getNombre(),
                    pedidosLunes.get(i).getFecha(),
                    pedidosLunes.get(i).getTipo()
            };
        }

        jtable_lunes.setModel(new DefaultTableModel(objetosArray, columnas) {
            Class[] types = tipos;

            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }

            @Override
            public Class getColumnClass(int columnindex) {
                return this.types[columnindex];
            }
        });
    }

    private void limpiarCampos() {
        jt_cliente.setText("");
        jt_vianda.setText("");
        rb_almuerzo.setSelected(false);
        rb_cena.setSelected(false);
        jdate_fecha.setDate(java.sql.Date.valueOf(LocalDate.now()));
        idClienteVigente = -1;
        idPedidoVigente = -1;
        idViandaVigente = -1;
    }

    private void llenarTablaViandas() {
        String[] columnas = new String[]{"ID", "Nombre", "Precio"};
        Class[] tipos = {Integer.class, String.class, Double.class};

        ArrayList<ViandaEntidad> viandas = ViandasLogica.getViandas();
        Object[][] objetosArray = new Object[viandas.size()][columnas.length];

        for (int i = 0; i < viandas.size(); i++) {
            objetosArray[i] = new Object[]{
                    viandas.get(i).getId(),
                    viandas.get(i).getNombre(),
                    viandas.get(i).getPrecio()
            };
        }

        jtable_viandas.setModel(new DefaultTableModel(objetosArray, columnas) {
            Class[] types = tipos;

            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }

            @Override
            public Class getColumnClass(int columnindex) {
                return this.types[columnindex];
            }
        });
    }

    private void llenarTablaClientes() {

        String[] columnas = new String[]{"ID", "Nombre", "Apellido", "Direccion", "DNI", "Telefono"};
        Class[] tipos = {Integer.class, String.class, String.class, String.class, String.class, String.class};

        ArrayList<ClienteEntidad> clientes = ClienteLogica.getClientes();
        Object[][] objetosArray = new Object[clientes.size()][columnas.length];

        for (int i = 0; i < clientes.size(); i++) {
            objetosArray[i] = new Object[]{
                    clientes.get(i).getId(),
                    clientes.get(i).getNombre(),
                    clientes.get(i).getApellido(),
                    clientes.get(i).getDireccion(),
                    clientes.get(i).getDni(),
                    clientes.get(i).getTelefono()
            };
        }

        jtable_cliente.setModel(new DefaultTableModel(objetosArray, columnas) {
            Class[] types = tipos;

            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
            @Override
            public Class getColumnClass(int columnindex){
                return this.types[columnindex];
            }
        });
    }

    public void addFilter(JTable tbl, String txt, Integer SearchColumnIndex) {

        DefaultTableModel model = (DefaultTableModel) tbl.getModel();

        final TableRowSorter<DefaultTableModel> sorter = new TableRowSorter<>(model);
        tbl.setRowSorter(sorter);
        if (txt.length() == 0) {
            sortearFecha();
        } else {
            try {
                sorter.setRowFilter(RowFilter.regexFilter("(?i)" + txt, SearchColumnIndex));
            } catch (PatternSyntaxException pse) {
                System.out.println("Bad regex pattern");
            }
        }
    }
    private void setDefaultSorter(JTable tabla, int columna, SortOrder sortOrder) {
        TableRowSorter<TableModel> sorter = new TableRowSorter<>(tabla.getModel());
        tabla.setRowSorter(sorter);
        List<RowSorter.SortKey> sortKeys = new ArrayList<>();
        sortKeys.add(new RowSorter.SortKey(columna, sortOrder));

        sorter.setSortKeys(sortKeys);
        sorter.sort();
    }
    public void sortearFecha() {
        setDefaultSorter(jtable_viandas, 1, SortOrder.DESCENDING); //revisar columna
    }

}
